--// add top table for etl
-- Migration SQL that makes the change goes here.
-- ---------------------------------------------------------------------------------------------------------------------------------------
--  建立所有ETL原始数据备份表
-- ---------------------------------------------------------------------------------------------------------------------------------------

create table if not exists top_dp_update (
  dp_id varchar(200) primary key,
  last_update_time datetime,
  etl_last_job_time datetime,
  first_trade_create_time datetime,
  last_trade_create_time datetime,
  last_trade_modified_time datetime
) ENGINE=InnoDB;

create table if not exists top_shipping (
  dp_id varchar(50),
  buyer_nick varchar(50),
  company_name varchar(200),
  created datetime,
  delivery_end datetime,
  delivery_start datetime,
  freight_payer char(10),
  is_success varchar(20),
  item_title varchar(255),
  modified datetime,
  order_code varchar(200),
  out_sid varchar(200),
  receiver_mobile varchar(20),
  receiver_name varchar(64),
  receiver_phone varchar(200),
  seller_confirm varchar(20),
  seller_nick varchar(50),
  status varchar(50),
  tid varchar(50),
  type varchar(200),
  job_execution_id bigint(20)
) ENGINE=InnoDB;

create table if not exists top_increment_member (
  dp_id varchar(50),
  buyer_nick varchar(50),
  status varchar(50),
  grade int,
  trade_count int,
  trade_amount numeric,
  close_trade_count int,
  close_trade_amount numeric,
  item_num int,
  biz_order_id bigint,
  group_ids varchar(200),
  province int,
  city varchar(200),
  avg_price decimal(12,2),
  relation_source int,
  last_trade_time datetime,
  item_close_count int,
  job_execution_id bigint(20)
) ENGINE=InnoDB;

create table if not exists top_trade_order (
  dp_id varchar(50),
  oid varchar(50),
  tid varchar(50),
  total_fee decimal(12,2),
  discount_fee decimal(12,2),
  adjust_fee decimal(12,2),
  payment decimal(12,2),
  item_meal_id varchar(200),
  status varchar(50),
  refund_id varchar(200),
  sku_id varchar(200),
  sku_properties_name varchar(200),
  item_meal_name varchar(200),
  num int,
  title varchar(200),
  price decimal(12,2),
  pic_path varchar(500),
  seller_nick varchar(50),
  buyer_nick varchar(50),
  refund_status varchar(50),
  outer_iid varchar(200),
  outer_sku_id varchar(200),
  num_iid varchar(50),
  cid varchar(200),
  is_oversold varchar(20),
  job_execution_id bigint(20),
  trade_modified datetime
) ENGINE=InnoDB;

-- TODO
create table if not exists top_trade_full (
  dp_id varchar(50),
  tid varchar(50),
  created datetime,
  modified datetime,
  endtime datetime,
  seller_nick varchar(50),
  buyer_nick varchar(50),
  buyer_cod_fee decimal(12,2),
  seller_cod_fee decimal(12,2),
  express_agency_fee decimal(12,2),
  status varchar(50),
  trade_from varchar(50),
  type varchar(200),
  alipay_no varchar(200),
  pay_time datetime,
  total_fee decimal(12,2),
  post_fee decimal(12,2),
  buyer_alipay_no varchar(200),
  receiver_name varchar(64),
  receiver_state varchar(50),
  receiver_city varchar(50),
  receiver_district varchar(50),
  receiver_address varchar(256),
  receiver_zip varchar(200),
  receiver_mobile varchar(200),
  receiver_phone varchar(200),
  consign_time bigint,
  buyer_email varchar(200),
  commission_fee decimal(12,2),
  has_post_fee varchar(200),
  received_payment decimal(12,2),
  cod_fee decimal(12,2),
  cod_status varchar(50),
  timeout_action_time bigint,
  job_execution_id bigint(20),
  payment  decimal(12,2),
  discount_fee decimal(12,2),
  point_fee decimal(12,2),
  real_point_fee decimal(12,2),
  shipping_type varchar(200),
  adjust_fee decimal(12,2),
  buyer_obtain_point_fee decimal(12,2),
  buyer_memo varchar(1000) collate utf8_bin,
  seller_memo varchar(1000) collate utf8_bin,
  seller_flag varchar(50) collate utf8_bin,
  key idx_top_trade_full_tid (tid)
) ENGINE=InnoDB;

create table if not exists top_trade (
  dp_id varchar(50),
  tid varchar(50),
  created datetime,
  modified datetime,
  endtime datetime,
  seller_nick varchar(50),
  buyer_nick varchar(50),
  buyer_cod_fee decimal(12,2),
  seller_cod_fee decimal(12,2),
  express_agency_fee decimal(12,2),
  status varchar(50),
  trade_from varchar(50),
  type varchar(200),
  alipay_no varchar(200),
  pay_time datetime,
  total_fee decimal(12,2),
  post_fee decimal(12,2),
  buyer_alipay_no varchar(200),
  receiver_name varchar(64),
  receiver_state varchar(50),
  receiver_city varchar(50),
  receiver_district varchar(50),
  receiver_address varchar(256),
  receiver_zip varchar(200),
  receiver_mobile varchar(200),
  receiver_phone varchar(200),
  consign_time datetime,
  buyer_email varchar(200),
  commission_fee decimal(12,2),
  has_post_fee varchar(200),
  received_payment decimal(12,2),
  cod_fee decimal(12,2),
  cod_status varchar(50),
  timeout_action_time bigint,
  job_execution_id bigint(20),
  payment decimal(12,2),
  discount_fee decimal(12,2),
  point_fee decimal(12,2),
  real_point_fee decimal(12,2),
  shipping_type varchar(200),
  adjust_fee decimal(12,2),
  buyer_obtain_point_fee decimal(12,2),
  buyer_memo varchar(1000) collate utf8_bin,
  seller_memo varchar(1000) collate utf8_bin,
  seller_flag varchar(50) collate utf8_bin
) ENGINE=InnoDB;

create table if not exists top_trade_order_incr (
  dp_id varchar(50),
  oid varchar(50),
  tid varchar(50),
  total_fee decimal(12,2),
  discount_fee decimal(12,2),
  adjust_fee decimal(12,2),
  payment decimal(12,2),
  item_meal_id varchar(200),
  status varchar(50),
  refund_id varchar(200),
  sku_id varchar(200),
  sku_properties_name varchar(200),
  item_meal_name varchar(200),
  num int,
  title varchar(200),
  price decimal(12,2),
  pic_path varchar(500),
  seller_nick varchar(50),
  buyer_nick varchar(50),
  refund_status varchar(50),
  outer_iid varchar(200),
  outer_sku_id varchar(200),
  num_iid varchar(50),
  cid varchar(200),
  is_oversold varchar(20),
  job_execution_id bigint(20),
  trade_modified datetime
) ENGINE=InnoDB;

create table if not exists top_trade_incr (
  dp_id varchar(50),
  tid varchar(50),
  created datetime,
  modified datetime,
  endtime datetime,
  seller_nick varchar(50),
  buyer_nick varchar(50),
  buyer_cod_fee decimal(12,2),
  seller_cod_fee decimal(12,2),
  express_agency_fee decimal(12,2),
  status varchar(50),
  trade_from varchar(50),
  type varchar(200),
  alipay_no varchar(200),
  pay_time datetime,
  total_fee decimal(12,2),
  post_fee decimal(12,2),
  buyer_alipay_no varchar(200),
  receiver_name varchar(64),
  receiver_state varchar(50),
  receiver_city varchar(50),
  receiver_district varchar(50),
  receiver_address varchar(256),
  receiver_zip varchar(200),
  receiver_mobile varchar(200),
  receiver_phone varchar(200),
  consign_time datetime,
  buyer_email varchar(200),
  commission_fee decimal(12,2),
  has_post_fee varchar(200),
  received_payment decimal(12,2),
  cod_fee decimal(12,2),
  cod_status varchar(50),
  timeout_action_time bigint,
  job_execution_id bigint(20) ,
  payment decimal(12,2),
  discount_fee decimal(12,2),
  point_fee decimal(12,2),
  real_point_fee decimal(12,2),
  shipping_type varchar(200),
  adjust_fee decimal(12,2),
  buyer_obtain_point_fee decimal(12,2),
  buyer_memo varchar(1000) collate utf8_bin,
  seller_memo varchar(1000) collate utf8_bin,
  seller_flag varchar(50) collate utf8_bin
) ENGINE=InnoDB;

create table if not exists top_user (
  dp_id varchar(50),
  user_id varchar(200),
  nick varchar(200),
  sex char(1),
  buyer_credit_lev int,
  buyer_credit_score int,
  buyer_credit_good_num int,
  buyer_credit_total_num int,
  seller_credit_lev int,
  seller_credit_score int,
  seller_credit_good_num int,
  seller_credit_total_num int,
  zip int,
  address varchar(200),
  city varchar(200),
  state varchar(200),
  country varchar(200),
  district varchar(200),
  created datetime,
  last_visit datetime,
  birthday datetime,
  type varchar(200),
  alipay_account varchar(200),
  alipay_no varchar(200),
  has_shop varchar(200),
  vip_info varchar(200),
  email varchar(200),
  job_execution_id bigint(20)
) ENGINE=InnoDB;

create table if not exists top_item (
  dp_id varchar(50),
  num_iid varchar(50),
  nick varchar(200),
  price decimal(12,2),
  detail_url varchar(500),
  title varchar(200),
  pic_url varchar(500),
  list_time datetime,
  type varchar(200),
  props_name text,
  created datetime,
  promoted_service varchar(200),
  cid varchar(200),
  seller_cids varchar(200),
  props text,
  input_pids varchar(200),
  input_str varchar(200),
  num varchar(200),
  valid_thru varchar(200),
  delist_time datetime,
  stuff_status varchar(50),
  loc_zip varchar(200),
  loc_address varchar(200),
  loc_city varchar(200),
  loc_state varchar(200),
  loc_country varchar(200),
  loc_district varchar(200),
  post_fee decimal(12,2),
  express_fee decimal(12,2),
  ems_fee decimal(12,2),
  has_discount varchar(200),
  freight_payer varchar(200),
  has_invoice varchar(200),
  has_warranty varchar(200),
  has_showcase varchar(200),
  modified datetime,
  increment varchar(200),
  approve_status varchar(50),
  postage_id varchar(200),
  product_id varchar(200),
  auction_point varchar(200),
  property_alias varchar(1000),
  outer_id varchar(200),
  is_virtual varchar(20),
  is_taobao varchar(20),
  is_ex varchar(20),
  is_timing varchar(20),
  is_3d varchar(20),
  score bigint,
  volume bigint,
  one_station varchar(200),
  second_kill varchar(200),
  auto_fill varchar(200),
  violation varchar(200),
  is_prepay varchar(20),
  ww_status varchar(50),
  wap_detail_url varchar(500),
  after_sale_id varchar(200),
  cod_postage_id varchar(200),
  sell_promise varchar(200),
  job_execution_id bigint(20)
) ENGINE=InnoDB;

create table if not exists top_product_seller_cat (
  num_iid varchar(50),
  seller_cid varchar(200),
  job_execution_id bigint(20)
) ENGINE=InnoDB;

create table if not exists top_product_prop (
  num_iid varchar(50),
  pid varchar(200),
  prop_name varchar(200),
  vid varchar(200),
  name varchar(200),
  name_alias varchar(200),
  is_input_prop varchar(20),
  job_execution_id bigint(20)
) ENGINE=InnoDB;

create table if not exists top_item_cat (
  cid varchar(200),
  parent_cid varchar(200),
  name varchar(200),
  is_parent varchar(20),
  job_execution_id bigint(20)
) ENGINE=InnoDB;

create table if not exists top_shop (
  dp_id varchar(50),
  cid varchar(200),
  nick varchar(200),
  title varchar(200),
  pic_path varchar(500),
  created datetime,
  modified datetime,
  remain_count int,
  all_count int,
  used_count int,
  shop_item_score numeric,
  shop_service_score numeric,
  shop_delivery_score numeric,
  job_execution_id bigint(20)
) ENGINE=InnoDB;

create table if not exists top_item_sku (
  dp_id varchar(50),
  num_iid varchar(50),
  sku_id varchar(200),
  properties varchar(200),
  quantity int,
  price decimal(12,2),
  outer_id varchar(200),
  created datetime,
  modified datetime,
  status varchar(50),
  job_execution_id bigint(20)
) ENGINE=InnoDB;

create table if not exists top_load_log (
  table_name varchar(100),
  updated datetime,
  etl_job_id bigint(20),
  message text
) ENGINE=InnoDB;

create table if not exists top_user_mobile (
  nick varchar(200),
  mobile varchar(20),
  job_execution_id bigint(20)
) ENGINE=InnoDB;


create table if not exists top_refund (
  dp_id varchar(50),
  refund_id varchar(200),
  tid varchar(50),
  oid varchar(50),
  modified datetime,
  status varchar(50),
  refund_fee decimal(12,2),
  price decimal(12,2),
  num int,
  num_iid varchar(50),
  alipay_no varchar(200),
  total_fee decimal(12,2),
  buyer_nick varchar(50),
  seller_nick varchar(50),
  created datetime,
  order_status varchar(50),
  good_status varchar(50),
  has_good_return varchar(200),
  payment varchar(200),
  reason varchar(200),
  iid varchar(200),
  title varchar(200),
  refund_desc varchar(200),
  good_return_time datetime,
  company_name varchar(200),
  sid varchar(200),
  address varchar(200),
  shipping_type varchar(200),
  rto_remind_type int,
  rto_exists_timeout varchar(200),
  rto_timeout datetime,
  job_execution_id bigint(20)
) ENGINE=InnoDB;

alter table top_refund rename to top_refund_bak;

create table if not exists top_refund (
  dp_id varchar(50),
  refund_id varchar(200),
  tid varchar(50),
  oid varchar(50),
  modified datetime,
  status varchar(50),
  refund_fee decimal(12,2),
  price decimal(12,2),
  num int,
  num_iid varchar(50),
  alipay_no varchar(200),
  total_fee decimal(12,2),
  buyer_nick varchar(50),
  seller_nick varchar(50),
  created datetime,
  order_status varchar(50),
  good_status varchar(50),
  has_good_return varchar(200),
  payment varchar(200),
  reason varchar(200),
  iid varchar(200),
  title varchar(200),
  refund_desc varchar(200),
  good_return_time datetime,
  company_name varchar(200),
  sid varchar(200),
  address varchar(200),
  shipping_type varchar(200),
  rto_remind_type int,
  rto_exists_timeout varchar(200),
  rto_timeout datetime,
  job_execution_id bigint(20)
) ENGINE=InnoDB;


create table if not exists top_summary_user (
  buyer_nick varchar(50),
  name varchar(200),
  occurance integer,
  last_datetime datetime,
  last_job_execution_id bigint(20),
  key idx_top_summary_user_buyer_nick(buyer_nick),
  UNIQUE INDEX uk_top_summary_user USING BTREE (buyer_nick, name)
) ENGINE=InnoDB;

create table if not exists top_item_onsale (
  dp_id varchar(50),
  num_iid varchar(50),
  nick varchar(200),
  price decimal(12,2),
  detail_url varchar(500),
  title varchar(200),
  pic_url varchar(500),
  list_time datetime,
  type varchar(200),
  props_name text,
  created datetime,
  promoted_service varchar(200),
  cid bigint,
  seller_cids varchar(200),
  props text,
  input_pids varchar(200),
  input_str varchar(200),
  num bigint,
  valid_thru bigint,
  delist_time datetime,
  stuff_status varchar(50),
  loc_zip varchar(200),
  loc_address varchar(200),
  loc_city varchar(200),
  loc_state varchar(200),
  loc_country varchar(200),
  loc_district varchar(200),
  post_fee decimal(12,2),
  express_fee decimal(12,2),
  ems_fee decimal(12,2),
  has_discount varchar(200),
  freight_payer varchar(200),
  has_invoice varchar(200),
  has_warranty varchar(200),
  has_showcase varchar(200),
  modified datetime,
  increment varchar(200),
  approve_status varchar(50),
  postage_id bigint,
  product_id bigint,
  auction_point bigint,
  property_alias varchar(1000),
  outer_id varchar(200),
  is_virtual varchar(20),
  is_taobao varchar(20),
  is_ex varchar(20),
  is_timing varchar(20),
  is_3d varchar(20),
  score bigint,
  volume bigint,
  one_station varchar(200),
  second_kill varchar(200),
  auto_fill varchar(200),
  violation varchar(200),
  is_prepay varchar(20),
  ww_status varchar(50),
  wap_detail_url varchar(500),
  after_sale_id varchar(200),
  cod_postage_id varchar(200),
  sell_promise varchar(200),
  job_execution_id bigint(20)
) ENGINE=InnoDB;

create table if not exists top_trade_rate(
  dp_id varchar(50),
  valid_score varchar(20),
  tid varchar(50), -- pk
  oid varchar(50), -- pk
  result varchar(200),
  role varchar(200),
  nick varchar(200),
  created varchar(200),-- date yyyymmddhhMMss
  rated_nick varchar(200),
  item_title varchar(200),
  item_price decimal(12,2),
  content text,
  reply varchar(1000),
  job_execution_id bigint(20)
) ENGINE=InnoDB;


-- ---------------------------------------------------------------------------------------------------------------------------------------
--  STEP 2.  建立所有ETL数据缓冲表
-- ---------------------------------------------------------------------------------------------------------------------------------------

create table if not exists top_trade_order_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  oid varchar(50),
  tid varchar(50),
  total_fee decimal(12,2),
  discount_fee decimal(12,2),
  adjust_fee decimal(12,2),
  payment decimal(12,2),
  item_meal_id varchar(200),
  status varchar(50),
  refund_id varchar(200),
  sku_id varchar(200),
  sku_properties_name varchar(200),
  item_meal_name varchar(200),
  num int,
  title varchar(200),
  price decimal(12,2),
  pic_path varchar(500),
  seller_nick varchar(50),
  buyer_nick varchar(50),
  refund_status varchar(50),
  outer_iid varchar(200),
  outer_sku_id varchar(200),
  num_iid varchar(50),
  cid varchar(200),
  is_oversold varchar(20),
  trade_modified datetime,
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_tid (tid)
) ENGINE=InnoDB;

create table if not exists top_shipping_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  buyer_nick varchar(50),
  company_name varchar(200),
  created datetime,
  delivery_end datetime,
  delivery_start datetime,
  freight_payer varchar(200),
  is_success varchar(20),
  item_title varchar(200),
  modified datetime,
  order_code varchar(200),
  out_sid varchar(200),
  receiver_mobile varchar(200),
  receiver_name varchar(64),
  receiver_phone varchar(200),
  seller_confirm varchar(20),
  seller_nick varchar(50),
  status varchar(50),
  tid varchar(50),
  type varchar(200),
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_order_code (order_code),
  KEY idx_tid (tid)
) ENGINE=InnoDB;

create table if not exists top_increment_member_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  buyer_nick varchar(50),
  status varchar(50),
  grade int,
  trade_count int,
  trade_amount numeric,
  close_trade_count int,
  close_trade_amount numeric,
  item_num int,
  biz_order_id varchar(200),
  group_ids varchar(200),
  province int,
  city varchar(200),
  avg_price decimal(12,2),
  relation_source int,
  last_trade_time datetime,
  last_sync datetime,
  item_close_count int,
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_dp_id (dp_id),
  KEY idx_buyer_nick (buyer_nick)
) ENGINE=InnoDB;

create table if not exists top_trade_full_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  tid varchar(50),
  created datetime,
  modified datetime,
  endtime datetime,
  seller_nick varchar(50),
  buyer_nick varchar(50),
  buyer_cod_fee decimal(12,2),
  seller_cod_fee decimal(12,2),
  express_agency_fee decimal(12,2),
  status varchar(50),
  trade_from varchar(50),
  type varchar(200),
  alipay_no varchar(200),
  pay_time datetime,
  total_fee decimal(12,2),
  post_fee decimal(12,2),
  buyer_alipay_no varchar(200),
  receiver_name varchar(64),
  receiver_state varchar(50),
  receiver_city varchar(50),
  receiver_district varchar(50),
  receiver_address varchar(256),
  receiver_zip varchar(200),
  receiver_mobile varchar(200),
  receiver_phone varchar(200),
  consign_time bigint,
  buyer_email varchar(200),
  step_trade_status varchar(50),
  step_paid_fee decimal(12,2),
  commission_fee decimal(12,2),
  has_post_fee varchar(200),
  received_payment decimal(12,2),
  cod_fee decimal(12,2),
  cod_status varchar(50),
  timeout_action_time bigint,
  payment  decimal(12,2),
  discount_fee decimal(12,2),
  point_fee decimal(12,2),
  real_point_fee decimal(12,2),
  shipping_type varchar(200),
  adjust_fee decimal(12,2) ,
  buyer_obtain_point_fee decimal(12,2),
  buyer_memo varchar(1000) collate utf8_bin,
  seller_memo varchar(1000) collate utf8_bin,
  seller_flag varchar(50) collate utf8_bin,
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_buyer_nick (buyer_nick),
  KEY idx_tid (tid)
) ENGINE=InnoDB;

create table if not exists top_trade_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  tid varchar(50),
  created datetime,
  modified datetime,
  endtime datetime,
  seller_nick varchar(50),
  buyer_nick varchar(50),
  buyer_cod_fee decimal(12,2),
  seller_cod_fee decimal(12,2),
  express_agency_fee decimal(12,2),
  status varchar(50),
  trade_from varchar(50),
  type varchar(200),
  alipay_no varchar(200),
  pay_time datetime,
  total_fee decimal(12,2),
  post_fee decimal(12,2),
  buyer_alipay_no varchar(200),
  receiver_name varchar(64),
  receiver_state varchar(50),
  receiver_city varchar(50),
  receiver_district varchar(50),
  receiver_address varchar(256),
  receiver_zip varchar(200),
  receiver_mobile varchar(200),
  receiver_phone varchar(200),
  consign_time datetime,
  buyer_email varchar(200),
  step_trade_status varchar(50),
  step_paid_fee decimal(12,2),
  commission_fee decimal(12,2),
  has_post_fee varchar(200),
  received_payment decimal(12,2),
  cod_fee decimal(12,2),
  cod_status varchar(50),
  timeout_action_time bigint,
  payment  decimal(12,2),
  discount_fee decimal(12,2),
  point_fee decimal(12,2),
  real_point_fee decimal(12,2),
  shipping_type varchar(200),
  adjust_fee decimal(12,2),
  buyer_obtain_point_fee decimal(12,2),
  buyer_memo varchar(1000) collate utf8_bin,
  seller_memo varchar(1000) collate utf8_bin,
  seller_flag varchar(50) collate utf8_bin,
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_buyer_nick (buyer_nick),
  KEY idx_tid (tid)
) ENGINE=InnoDB;

create table if not exists top_trade_order_incr_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  oid varchar(50),
  tid varchar(50),
  total_fee decimal(12,2),
  discount_fee decimal(12,2),
  adjust_fee decimal(12,2),
  payment decimal(12,2),
  item_meal_id varchar(200),
  status varchar(50),
  refund_id varchar(200),
  sku_id varchar(200),
  sku_properties_name varchar(200),
  item_meal_name varchar(200),
  num int,
  title varchar(200),
  price decimal(12,2),
  pic_path varchar(500),
  seller_nick varchar(50),
  buyer_nick varchar(50),
  refund_status varchar(50),
  outer_iid varchar(200),
  outer_sku_id varchar(200),
  num_iid varchar(50),
  cid varchar(200),
  is_oversold varchar(20),
  trade_modified datetime,
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_tid (tid)
) ENGINE=InnoDB;

create table if not exists top_trade_incr_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  tid varchar(50),
  created datetime,
  modified datetime,
  endtime datetime,
  seller_nick varchar(50),
  buyer_nick varchar(50),
  buyer_cod_fee decimal(12,2),
  seller_cod_fee decimal(12,2),
  express_agency_fee decimal(12,2),
  status varchar(50),
  trade_from varchar(50),
  type varchar(200),
  alipay_no varchar(200),
  pay_time datetime,
  total_fee decimal(12,2),
  post_fee decimal(12,2),
  buyer_alipay_no varchar(200),
  receiver_name varchar(64),
  receiver_state varchar(50),
  receiver_city varchar(50),
  receiver_district varchar(50),
  receiver_address varchar(256),
  receiver_zip varchar(200),
  receiver_mobile varchar(200),
  receiver_phone varchar(200),
  consign_time datetime,
  buyer_email varchar(200),
  step_trade_status varchar(50),
  step_paid_fee decimal(12,2),
  commission_fee decimal(12,2),
  has_post_fee varchar(200),
  received_payment decimal(12,2),
  cod_fee decimal(12,2),
  cod_status varchar(50),
  timeout_action_time bigint,
  payment  decimal(12,2),
  discount_fee decimal(12,2),
  point_fee decimal(12,2),
  real_point_fee decimal(12,2),
  shipping_type varchar(200),
  adjust_fee decimal(12,2),
  buyer_obtain_point_fee decimal(12,2),
  buyer_memo varchar(1000) collate utf8_bin,
  seller_memo varchar(1000) collate utf8_bin,
  seller_flag varchar(50) collate utf8_bin,
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_tid (tid)
) ENGINE=InnoDB;

create table if not exists top_trade_promotion_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
    job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
    tid VARCHAR(50),
    dp_id VARCHAR(50),
    job_id VARCHAR(100),
    type VARCHAR(200),
    toid VARCHAR(50),
    id VARCHAR(50),
    discount_fee DECIMAL(12,2),
    gift_item_id BIGINT(20),
    gift_item_name VARCHAR(255),
    gift_item_num BIGINT(20),
    promotion_desc VARCHAR(500),
    promotion_id VARCHAR(100),
    promotion_name VARCHAR(50),
    trade_created datetime,
    trade_modified datetime,
    PRIMARY KEY (row_id)
)ENGINE=InnoDB;

create table if not exists top_user_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  user_id varchar(200),
  nick varchar(200),
  sex char(1),
  buyer_credit_lev int,
  buyer_credit_score int,
  buyer_credit_good_num int,
  buyer_credit_total_num int,
  seller_credit_lev int,
  seller_credit_score int,
  seller_credit_good_num int,
  seller_credit_total_num int,
  zip int,
  address varchar(200),
  city varchar(200),
  state varchar(200),
  country varchar(200),
  district varchar(200),
  created datetime,
  last_visit datetime,
  birthday bigint,
  type varchar(200),
  alipay_account varchar(200),
  alipay_no varchar(200),
  has_shop varchar(200),
  vip_info varchar(200),
  email varchar(200),
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_nick (nick)
) ENGINE=InnoDB;

create table if not exists top_item_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  num_iid varchar(50),
  nick varchar(200),
  price decimal(12,2),
  detail_url varchar(500),
  title varchar(200),
  pic_url varchar(500),
  list_time datetime,
  type varchar(200),
  props_name text,
  created datetime,
  promoted_service varchar(200),
  cid varchar(200),
  seller_cids varchar(200),
  props text,
  input_pids varchar(200),
  input_str varchar(200),
  num bigint,
  valid_thru bigint,
  delist_time datetime,
  stuff_status varchar(50),
  loc_zip varchar(200),
  loc_address varchar(200),
  loc_city varchar(200),
  loc_state varchar(200),
  loc_country varchar(200),
  loc_district varchar(200),
  post_fee decimal(12,2),
  express_fee decimal(12,2),
  ems_fee decimal(12,2),
  has_discount varchar(200),
  freight_payer varchar(200),
  has_invoice varchar(200),
  has_warranty varchar(200),
  has_showcase varchar(200),
  modified datetime,
  increment varchar(200),
  approve_status varchar(50),
  postage_id varchar(200),
  product_id varchar(200),
  auction_point bigint,
  property_alias varchar(1000),
  outer_id varchar(200),
  is_virtual varchar(20),
  is_taobao varchar(20),
  is_ex varchar(20),
  is_timing varchar(20),
  is_3d varchar(20),
  score bigint,
  volume bigint,
  one_station varchar(200),
  second_kill varchar(200),
  auto_fill varchar(200),
  violation varchar(200),
  is_prepay varchar(20),
  ww_status varchar(50),
  wap_detail_url varchar(500),
  after_sale_id varchar(200),
  cod_postage_id varchar(200),
  sell_promise varchar(200),
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status)
) ENGINE=InnoDB;

create table if not exists top_product_seller_cat_job_buffer(
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  num_iid varchar(50),
  seller_cid varchar(200),
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status)
) ENGINE=InnoDB;

create table if not exists top_product_prop_job_buffer(
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  num_iid varchar(50),
  pid varchar(200),
  prop_name varchar(200),
  vid varchar(200),
  name varchar(200),
  name_alias varchar(200),
  is_input_prop varchar(20),
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status)
) ENGINE=InnoDB;

create table if not exists top_item_cat_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  cid varchar(200),
  parent_cid varchar(200),
  name varchar(200),
  is_parent varchar(20),
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status)
) ENGINE=InnoDB;

create table if not exists top_shop_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  cid varchar(200),
  nick varchar(200),
  title varchar(200),
  pic_path varchar(500),
  created datetime,
  modified datetime,
  remain_count int,
  all_count int,
  used_count int,
  shop_item_score numeric,
  shop_service_score numeric,
  shop_delivery_score numeric,
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status)
) ENGINE=InnoDB;

create table if not exists top_item_sku_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  num_iid varchar(50),
  sku_id varchar(200),
  properties varchar(200),
  quantity int,
  price decimal(12,2),
  outer_id varchar(200),
  created datetime,
  modified datetime,
  status varchar(50),
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status)
) ENGINE=InnoDB;


create table if not exists top_refund_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  refund_id varchar(200),
  tid varchar(50),
  oid varchar(50),
  modified datetime,
  status varchar(50),
  refund_fee decimal(12,2),
  price decimal(12,2),
  num int,
  num_iid varchar(50),
  alipay_no varchar(200),
  total_fee varchar(200),
  buyer_nick varchar(50),
  seller_nick varchar(50),
  created        datetime,
  order_status varchar(50),
  good_status varchar(50),
  has_good_return varchar(200),
  payment varchar(200),
  reason varchar(200),
  iid varchar(200),
  title varchar(200),
  refund_desc varchar(200),
  good_return_time  datetime,
  company_name varchar(200),
  sid varchar(200),
  address varchar(200),
  shipping_type varchar(200),
  rto_remind_type int,
  rto_exists_timeout varchar(200),
  rto_timeout datetime,
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_tid (tid)
) ENGINE=InnoDB;

alter table  top_refund_job_buffer rename to  top_refund_job_buffer_bak;

create table if not exists top_refund_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  refund_id varchar(200),
  tid varchar(50),
  oid varchar(50),
  modified datetime,
  status varchar(50),
  refund_fee decimal(12,2),
  price decimal(12,2),
  num int,
  num_iid varchar(50),
  alipay_no varchar(200),
  total_fee varchar(200),
  buyer_nick varchar(50),
  seller_nick varchar(50),
  created        datetime,
  order_status varchar(50),
  good_status varchar(50),
  has_good_return varchar(200),
  payment varchar(200),
  reason varchar(200),
  iid varchar(200),
  title varchar(200),
  refund_desc varchar(200),
  good_return_time  datetime,
  company_name varchar(200),
  sid varchar(200),
  address varchar(200),
  shipping_type varchar(200),
  rto_remind_type int,
  rto_exists_timeout varchar(200),
  rto_timeout datetime,
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_tid (tid)
) ENGINE=InnoDB;

create table if not exists top_item_onsale_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  num_iid varchar(50),
  nick varchar(200),
  price decimal(12,2),
  detail_url varchar(500),
  title varchar(200),
  pic_url varchar(500),
  list_time datetime,
  type varchar(200),
  props_name text,
  created datetime,
  promoted_service varchar(200),
  cid varchar(200),
  seller_cids varchar(200),
  props text,
  input_pids varchar(200),
  input_str varchar(200),
  num bigint,
  valid_thru bigint,
  delist_time datetime,
  stuff_status varchar(50),
  loc_zip varchar(200),
  loc_address varchar(200),
  loc_city varchar(200),
  loc_state varchar(200),
  loc_country varchar(200),
  loc_district varchar(200),
  post_fee decimal(12,2),
  express_fee decimal(12,2),
  ems_fee decimal(12,2),
  has_discount varchar(200),
  freight_payer varchar(200),
  has_invoice varchar(200),
  has_warranty varchar(200),
  has_showcase varchar(200),
  modified datetime,
  increment varchar(200),
  approve_status varchar(50),
  postage_id varchar(200),
  product_id varchar(200),
  auction_point bigint,
  property_alias varchar(1000),
  outer_id varchar(200),
  is_virtual varchar(20),
  is_taobao varchar(20),
  is_ex varchar(20),
  is_timing varchar(20),
  is_3d varchar(20),
  score bigint,
  volume bigint,
  one_station varchar(200),
  second_kill varchar(200),
  auto_fill varchar(200),
  violation varchar(200),
  is_prepay varchar(20),
  ww_status varchar(50),
  wap_detail_url varchar(500),
  after_sale_id varchar(200),
  cod_postage_id varchar(200),
  sell_promise varchar(200),
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status)
) ENGINE=InnoDB;

create table if not exists top_trade_rate_job_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50),
  valid_score varchar(20),
  tid varchar(50), -- pk
  oid varchar(50), -- pk
  result varchar(200),
  role varchar(200),
  nick varchar(200),
  created varchar(200),-- date yyyymmddhhMMss
  rated_nick varchar(200),
  item_title varchar(200),
  item_price decimal(12,2),
  content text,
  reply varchar(1000),
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status),
  KEY idx_tid (tid)
) ENGINE=InnoDB;

create table if not exists top_acookie_visitorid_buffer (
  row_id bigint(20) NOT NULL AUTO_INCREMENT,
  job_execution_id bigint(20) NOT NULL,
  job_status char(5) NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成' ,
  dp_id varchar(50)  NOT NULL,
  job_id varchar(100) NOT NULL,
  buyer_nick varchar(50) NOT NULL,
  acook_nick varchar(50) NOT NULL,
  trade_created datetime,
  PRIMARY KEY (row_id),
  KEY idx_job_status (job_status)
) ENGINE=InnoDB;


-- ---------------------------------------------------------------------------------------------------------------------------------------
--  STEP 3.  建立所有ETL数据中间临时表
-- ---------------------------------------------------------------------------------------------------------------------------------------

create table if not exists top_jobmid_trade_doing (
  tid bigint(20) NOT NULL,
  buyer_nick varchar(50) NOT NULL,
  PRIMARY KEY (tid, buyer_nick),
  KEY idx_buyer_nick (buyer_nick)
) ENGINE=InnoDB;

create table if not exists top_jobmid_trade (
  dp_id varchar(50) NOT NULL,
  tid varchar(50) NOT NULL,
  created datetime,
  modified datetime,
  endtime datetime,
  seller_nick varchar(50),
  buyer_nick varchar(50),
  buyer_cod_fee decimal(12,2),
  seller_cod_fee decimal(12,2),
  express_agency_fee decimal(12,2),
  status varchar(50),
  trade_from varchar(50),
  type varchar(200),
  alipay_no varchar(200),
  pay_time datetime,
  total_fee decimal(12,2),
  post_fee decimal(12,2),
  buyer_alipay_no varchar(200),
  receiver_name varchar(64),
  receiver_state varchar(50),
  receiver_city varchar(50),
  receiver_district varchar(50),
  receiver_address varchar(256),
  receiver_zip varchar(200),
  receiver_mobile varchar(200),
  receiver_phone varchar(200),
  consign_time datetime,
  buyer_email varchar(200),
  step_trade_status varchar(50),
  step_paid_fee decimal(12,2),
  commission_fee decimal(12,2),
  has_post_fee varchar(200),
  received_payment decimal(12,2),
  cod_fee decimal(12,2),
  cod_status varchar(50),
  timeout_action_time bigint,
  job_execution_id bigint(20),
  payment decimal(12,2),
  discount_fee decimal(12,2),
  point_fee decimal(12,2),
  real_point_fee decimal(12,2),
  shipping_type varchar(200),
  adjust_fee decimal(12,2),
  buyer_obtain_point_fee decimal(12,2),
  buyer_memo varchar(1000) collate utf8_bin,
  seller_memo varchar(1000) collate utf8_bin,
  seller_flag varchar(50) collate utf8_bin,
  PRIMARY KEY (tid)
) ENGINE=InnoDB;

create table if not exists top_jobmid_trade_order (
  dp_id varchar(50) NOT NULL,
  oid varchar(50) NOT NULL,
  tid varchar(50) NOT NULL,
  total_fee decimal(12,2),
  discount_fee decimal(12,2),
  adjust_fee decimal(12,2),
  payment decimal(12,2),
  item_meal_id varchar(200),
  status varchar(50),
  refund_id varchar(200),
  sku_id varchar(200),
  sku_properties_name varchar(200),
  item_meal_name varchar(200),
  num int,
  title varchar(200),
  price decimal(12,2),
  pic_path varchar(500),
  seller_nick varchar(50),
  buyer_nick varchar(50),
  refund_status varchar(50),
  outer_iid varchar(200),
  outer_sku_id varchar(200),
  num_iid varchar(50),
  cid varchar(200),
  is_oversold varchar(20),
  trade_modified datetime,
  PRIMARY KEY (oid),
  KEY idx_tid (tid)
) ENGINE=InnoDB;

create table if not exists top_jobmid_refund (
  dp_id varchar(50) NOT NULL,
  refund_id varchar(200) NOT NULL,
  tid varchar(50) NOT NULL,
  oid varchar(50) NOT NULL,
  modified datetime,
  status varchar(50),
  refund_fee decimal(12,2),
  price decimal(12,2),
  num int,
  num_iid varchar(50),
  alipay_no varchar(200),
  total_fee varchar(200),
  buyer_nick varchar(50),
  seller_nick varchar(50),
  created        datetime,
  order_status varchar(50),
  good_status varchar(50),
  has_good_return varchar(200),
  payment varchar(200),
  reason varchar(200),
  iid varchar(200),
  title varchar(200),
  refund_desc varchar(200),
  good_return_time  datetime,
  company_name varchar(200),
  sid varchar(200),
  address varchar(200),
  shipping_type varchar(200),
  rto_remind_type int,
  rto_exists_timeout varchar(200),
  rto_timeout datetime,
  PRIMARY KEY (refund_id)
) ENGINE=InnoDB;

alter table  top_jobmid_refund rename to top_jobmid_refund_bak;

create table if not exists top_jobmid_refund (
  dp_id varchar(50) NOT NULL,
  refund_id varchar(200) NOT NULL,
  tid varchar(50) NOT NULL,
  oid varchar(50) NOT NULL,
  modified datetime,
  status varchar(50),
  refund_fee decimal(12,2),
  price decimal(12,2),
  num int,
  num_iid varchar(50),
  alipay_no varchar(200),
  total_fee varchar(200),
  buyer_nick varchar(50),
  seller_nick varchar(50),
  created        datetime,
  order_status varchar(50),
  good_status varchar(50),
  has_good_return varchar(200),
  payment varchar(200),
  reason varchar(200),
  iid varchar(200),
  title varchar(200),
  refund_desc varchar(200),
  good_return_time  datetime,
  company_name varchar(200),
  sid varchar(200),
  address varchar(200),
  shipping_type varchar(200),
  rto_remind_type int,
  rto_exists_timeout varchar(200),
  rto_timeout datetime,
  PRIMARY KEY (refund_id)
) ENGINE=InnoDB;

create table if not exists top_jobmid_user (
  dp_id varchar(50) NOT NULL,
  user_id varchar(200),
  nick varchar(200) NOT NULL,
  sex char(1),
  buyer_credit_lev int,
  buyer_credit_score int,
  buyer_credit_good_num int,
  buyer_credit_total_num int,
  seller_credit_lev int,
  seller_credit_score int,
  seller_credit_good_num int,
  seller_credit_total_num int,
  zip int,
  address varchar(200),
  city varchar(200),
  state varchar(200),
  country varchar(200),
  district varchar(200),
  created datetime,
  last_visit datetime,
  birthday bigint,
  type varchar(200),
  alipay_account varchar(200),
  alipay_no varchar(200),
  has_shop varchar(200),
  vip_info varchar(200),
  email varchar(200),
  PRIMARY KEY (nick)
) ENGINE=InnoDB;

create table if not exists top_jobmid_item (
  dp_id varchar(50)  NOT NULL,
  num_iid varchar(50) NOT NULL,
  nick varchar(200),
  price decimal(12,2),
  detail_url varchar(500),
  title varchar(200),
  pic_url varchar(500),
  list_time datetime,
  type varchar(200),
  props_name text,
  created datetime,
  promoted_service varchar(200),
  cid varchar(200),
  seller_cids varchar(200),
  props text,
  input_pids varchar(200),
  input_str varchar(200),
  num bigint,
  valid_thru bigint,
  delist_time datetime,
  stuff_status varchar(50),
  loc_zip varchar(200),
  loc_address varchar(200),
  loc_city varchar(200),
  loc_state varchar(200),
  loc_country varchar(200),
  loc_district varchar(200),
  post_fee decimal(12,2),
  express_fee decimal(12,2),
  ems_fee decimal(12,2),
  has_discount varchar(200),
  freight_payer varchar(200),
  has_invoice varchar(200),
  has_warranty varchar(200),
  has_showcase varchar(200),
  modified datetime,
  increment varchar(200),
  approve_status varchar(50),
  postage_id varchar(200),
  product_id varchar(200),
  auction_point bigint,
  property_alias varchar(1000),
  outer_id varchar(200),
  is_virtual varchar(20),
  is_taobao varchar(20),
  is_ex varchar(20),
  is_timing varchar(20),
  is_3d varchar(20),
  score bigint,
  volume bigint,
  one_station varchar(200),
  second_kill varchar(200),
  auto_fill varchar(200),
  violation varchar(200),
  is_prepay varchar(20),
  ww_status varchar(50),
  wap_detail_url varchar(500),
  after_sale_id varchar(200),
  cod_postage_id varchar(200),
  sell_promise varchar(200),
  PRIMARY KEY (num_iid)
) ENGINE=InnoDB;

DROP TABLE IF EXISTS `top_item_sku`;
CREATE TABLE `top_item_sku` (
  `properties_name` varchar(1000) COLLATE utf8_bin DEFAULT NULL COMMENT 'sku所对应的销售属性的中文名字串',
  `sku_spec_id` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT '表示SKu上的产品规格信息',
  `with_hold_quantity` int(10)  DEFAULT '0' COMMENT '商品在付款减库存的状态下，该sku上未付款的订单数量',
  `sku_delivery_time` datetime DEFAULT NULL COMMENT 'sku级别发货时间',
  `change_prop` varchar(1000) COLLATE utf8_bin DEFAULT NULL COMMENT '基础色数据',
  `sku_id` varchar(50) COLLATE utf8_bin NOT NULL COMMENT 'sku的id',
  `dp_id` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `iid` varchar(100) COLLATE utf8_bin DEFAULT NULL COMMENT 'sku所属商品id',
  `num_iid` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT 'sku所属商品数字id',
  `properties` varchar(1000) COLLATE utf8_bin DEFAULT NULL COMMENT 'sku的销售属性组合字符串',
  `quantity` int(10) DEFAULT '0' COMMENT '属于这个sku的商品的数量',
  `price` decimal(12,2) DEFAULT NULL COMMENT '属于这个sku的商品的价格 ',
  `outer_id` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT '商家设置的外部id',
  `created` datetime DEFAULT NULL COMMENT 'sku创建日期 时间格式：yyyy-MM-dd HH:mm:ss',
  `modified` datetime DEFAULT NULL COMMENT 'sku最后修改日期 时间格式：yyyy-MM-dd HH:mm:ss',
  `status` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT 'sku状态。 normal:正常 ；delete:删除',
  `job_execution_id` bigint(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

DROP TABLE IF EXISTS `top_item_sku_job_buffer`;
CREATE TABLE `top_item_sku_job_buffer` (
  `row_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `job_execution_id` bigint(20) NOT NULL,
  `job_status` char(5) COLLATE utf8_bin NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成',
  `properties_name` varchar(1000) COLLATE utf8_bin DEFAULT NULL COMMENT 'sku所对应的销售属性的中文名字串',
  `sku_spec_id` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT '表示SKu上的产品规格信息',
  `with_hold_quantity` int(10)  DEFAULT '0' COMMENT '商品在付款减库存的状态下，该sku上未付款的订单数量',
  `sku_delivery_time` datetime DEFAULT NULL COMMENT 'sku级别发货时间',
  `change_prop` varchar(1000) COLLATE utf8_bin DEFAULT NULL COMMENT '基础色数据',
  `sku_id` varchar(50) COLLATE utf8_bin NOT NULL COMMENT 'sku的id',
  `dp_id` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `iid` varchar(100) COLLATE utf8_bin DEFAULT NULL COMMENT 'sku所属商品id',
  `num_iid` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT 'sku所属商品数字id',
  `properties` varchar(1000) COLLATE utf8_bin DEFAULT NULL COMMENT 'sku的销售属性组合字符串',
  `quantity` int(10) DEFAULT '0' COMMENT '属于这个sku的商品的数量',
  `price` decimal(12,2) DEFAULT NULL COMMENT '属于这个sku的商品的价格 ',
  `outer_id` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT '商家设置的外部id',
  `created` datetime DEFAULT NULL COMMENT 'sku创建日期 时间格式：yyyy-MM-dd HH:mm:ss',
  `modified` datetime DEFAULT NULL COMMENT 'sku最后修改日期 时间格式：yyyy-MM-dd HH:mm:ss',
  `status` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT 'sku状态。 normal:正常 ；delete:删除',
  `job_executuion_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`row_id`),
  KEY `idx_job_status` (`job_status`)
) ENGINE=InnoDB AUTO_INCREMENT=67961 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE  TABLE IF NOT EXISTS `top_item_seller_cat_job_buffer` (
  `row_id` BIGINT(20) NULL AUTO_INCREMENT ,
  `job_execution_id` BIGINT(20) NOT NULL ,
  `job_status` CHAR(5) NOT NULL DEFAULT 'NEW' ,
  `type` VARCHAR(50) NULL DEFAULT NULL ,
  `cid` VARCHAR(50) NULL DEFAULT NULL ,
  `parent_cid` VARCHAR(50) NULL DEFAULT NULL ,
  `name` VARCHAR(200) NULL DEFAULT NULL ,
  `pic_url` VARCHAR(1000) NULL DEFAULT NULL ,
  `sort_order` VARCHAR(50) NULL DEFAULT NULL ,
  `created` DATETIME NULL DEFAULT NULL ,
  `modified` DATETIME NULL DEFAULT NULL ,
  PRIMARY KEY (`row_id`) )
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE  TABLE IF NOT EXISTS `top_item_seller_cat` (
  `type` VARCHAR(50) NULL ,
  `cid` VARCHAR(50) NULL ,
  `parent_cid` VARCHAR(50) NULL ,
  `name` VARCHAR(200) NULL ,
  `pic_url` VARCHAR(1000) NULL ,
  `sort_order` VARCHAR(50) NULL ,
  `created` DATETIME NULL ,
  `modified` DATETIME NULL )
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

DROP TABLE IF EXISTS `top_chat_content`;
CREATE TABLE `top_chat_content` (
  `dp_id` varchar(50) COLLATE utf8_bin NOT NULL COMMENT '店铺id',
  `service_staff_id` varchar(50) COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT '客服人员id',
  `chat_time` datetime NOT NULL COMMENT '聊天时间',
  `buyer_nick` varchar(50) COLLATE utf8_bin NOT NULL COMMENT '访客ID对应的淘宝昵称',
  `direction` varchar(5) COLLATE utf8_bin DEFAULT NULL COMMENT '表示消息方向 0:from_id->to_id 1:to_id->from_id',
  `chat_type` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT '1 :自动回复 2 : 陌生人消息(等于0是好友消息) 4 : 广播消息 8 : 最近联系人陌生人消息 16 : 离线消息 32 : 子账号转发系统消息',
  `content` text COLLATE utf8_bin COMMENT '当direction=0有效，完整消息内容',
  `url_lists` text COLLATE utf8_bin COMMENT '当direction=1有效，url列表',
  `word_lists` text COLLATE utf8_bin COMMENT '当direction=1有效，（关键词，数量）列表',
  `length` int(10) DEFAULT '0' COMMENT '当direction=1有效，消息长度',
  `job_execution_id` bigint(20) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=1096 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

DROP TABLE IF EXISTS `top_chat_content_buffer`;
CREATE TABLE `top_chat_content_buffer` (
  `row_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `job_execution_id` bigint(20) NOT NULL,
  `job_status` char(5) COLLATE utf8_bin NOT NULL DEFAULT 'NEW' COMMENT 'ETL的JOB执行状态：NEW 暂未处理； DOING 正在处理；DONE 处理完成',
  `dp_id` varchar(50) COLLATE utf8_bin NOT NULL COMMENT '店铺id',
  `service_staff_id` varchar(50) COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT '客服人员id',
  `chat_time` datetime NOT NULL COMMENT '聊天时间',
  `buyer_nick` varchar(50) COLLATE utf8_bin NOT NULL COMMENT '访客ID对应的淘宝昵称',
  `direction` varchar(5) COLLATE utf8_bin DEFAULT NULL COMMENT '表示消息方向 0:from_id->to_id 1:to_id->from_id',
  `chat_type` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT 'type & 1 ：自动回复 type & 2 : 陌生人消息（等于0是好友消息） type & 4 : 广播消息 type & 8 : 最近联系人陌生人消\r\n\r\n息 type & 16 : 离线消息 type & 32 : 子账号转发系统消息',
  `content` text COLLATE utf8_bin COMMENT '当direction=0有效，完整消息内容',
  `url_lists` text COLLATE utf8_bin COMMENT '当direction=1有效，url列表',
  `word_lists` text COLLATE utf8_bin COMMENT '当direction=1有效，（关键词，数量）列表',
  `length` int(10) DEFAULT '0' COMMENT '当direction=1有效，消息长度',
  PRIMARY KEY (`row_id`),
  KEY `idx_job_status` (`job_status`)
) ENGINE=InnoDB AUTO_INCREMENT=1096 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE IF NOT EXISTS `plt_taobao_refund` (
  `refund_id` VARCHAR(200) NOT NULL COMMENT '退款单号' ,
  `tid` VARCHAR(50) NULL COMMENT '淘宝交易单号' ,
  `oid` VARCHAR(50) NULL COMMENT '子订单号' ,
  `dp_id` VARCHAR(50) NULL COMMENT '店铺ID' ,
  `total_fee` VARCHAR(200) NULL COMMENT '交易总金额' ,
  `buyer_nick` VARCHAR(50) NULL COMMENT '买家昵称' ,
  `seller_nick` VARCHAR(50) NULL COMMENT '买家昵称' ,
  `created` DATETIME NULL COMMENT '退款申请时间' ,
  `modified` DATETIME NULL COMMENT '更新时间' ,
  `order_status` VARCHAR(50) NULL COMMENT '退款对应的交易状态' ,
  `status` VARCHAR(50) NULL COMMENT '退款状态' ,
  `good_status` VARCHAR(50) NULL COMMENT '货物状态' ,
  `has_good_return` VARCHAR(200) NULL COMMENT '买家是否需要退货.可选值:true, false' ,
  `refund_fee` DECIMAL(12,2) NULL COMMENT '退还金额(退还给买家的金额)' ,
  `payment` VARCHAR(200) NULL COMMENT '支付给卖家的金额(交易总额-退还给买家的金额)' ,
  `reason` VARCHAR(200) NULL COMMENT '退款原因' ,
  `refund_desc` VARCHAR(200) NULL COMMENT '退款说明' ,
  `title` VARCHAR(200) NULL COMMENT '商品标题' ,
  `num` INT(11) NULL COMMENT '商品购买数量' ,
  `company_name` VARCHAR(200) NULL COMMENT '物流公司名称' ,
  `sid` VARCHAR(200) NULL COMMENT '退货运单号' ,
  PRIMARY KEY (`refund_id`) )
COMMENT = '退款信息表';



--//@UNDO
-- SQL to undo the change goes here.


